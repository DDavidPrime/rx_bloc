// Mocks generated by Mockito 5.0.9 from annotations
// in package:{{project_name}}/test/feature_counter/blocs/counter_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:{{project_name}}/base/repositories/counter_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [CounterRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCounterRepository extends _i1.Mock implements _i2.CounterRepository {
  MockCounterRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<int> increment() =>
      (super.noSuchMethod(Invocation.method(#increment, []),
          returnValue: Future<int>.value(0)) as _i3.Future<int>);
  @override
  _i3.Future<int> decrement() =>
      (super.noSuchMethod(Invocation.method(#decrement, []),
          returnValue: Future<int>.value(0)) as _i3.Future<int>);
}
