import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_rx_bloc/flutter_rx_bloc.dart';
import 'package:provider/provider.dart';

import '../blocs/${feature_underscore_case}_bloc.dart';
import '../di/${feature_underscore_case}_dependencies.dart';

class ${feature_pascal_case}Page extends StatelessWidget implements AutoRouteWrapper {
  const ${feature_pascal_case}Page({
    Key? key,
  }) : super(key: key);

  @override
  Widget wrappedRoute(BuildContext context) => MultiProvider(
        providers: ${feature_pascal_case}Dependencies.of(context).providers,
        child: this,
      );

  @override
  Widget build(BuildContext context) => Scaffold(
        appBar: AppBar(),
        body: Container(
          alignment: Alignment.center,
          padding: const EdgeInsets.symmetric(horizontal: 12),
          child: Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              _buildErrorListener(),
              Expanded(child: Center(child: _buildContainer())),
              ElevatedButton(
                onPressed: context.read<${feature_pascal_case}BlocType>().events.fetchData,
                child: const Text('Retry'),
              ),
            ],
          ),
        ),
      );

  Widget _buildContainer() => RxResultBuilder<${feature_pascal_case}BlocType, String>(
        state: (bloc) => bloc.states.data,
        buildLoading: (ctx, bloc) => const CircularProgressIndicator(),
        buildError: (ctx, error, bloc) => Text(error),
        buildSuccess: (ctx, state, bloc) => Text(state),
      );

  Widget _buildErrorListener() => RxBlocListener<${feature_pascal_case}BlocType, String>(
        state: (bloc) => bloc.states.errors,
        listener: (context, errorMessage) =>
            ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text(errorMessage ?? ''),
            behavior: SnackBarBehavior.floating,
          ),
        ),
      );
}
